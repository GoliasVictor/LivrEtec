### YamlMime:ManagedReference
items:
- uid: LivrEtec.Autor
  commentId: T:LivrEtec.Autor
  id: Autor
  parent: LivrEtec
  children:
  - LivrEtec.Autor.#ctor
  - LivrEtec.Autor.#ctor(System.Int32,System.String)
  - LivrEtec.Autor.#ctor(System.Int32)
  - LivrEtec.Autor.CompareTo(LivrEtec.Autor)
  - LivrEtec.Autor.Equals(LivrEtec.Autor)
  - LivrEtec.Autor.Equals(System.Object)
  - LivrEtec.Autor.GetHashCode
  - LivrEtec.Autor.Id
  - LivrEtec.Autor.Livros
  - LivrEtec.Autor.Nome
  - LivrEtec.Autor.op_Equality(LivrEtec.Autor,LivrEtec.Autor)
  - LivrEtec.Autor.op_Inequality(LivrEtec.Autor,LivrEtec.Autor)
  langs:
  - csharp
  - vb
  name: Autor
  nameWithType: Autor
  fullName: LivrEtec.Autor
  type: Class
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Autor
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 5
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: 'public sealed class Autor : IComparable<Autor>, IEquatable<Autor>'
    content.vb: >-
      Public NotInheritable Class Autor

          Implements IComparable(Of Autor), IEquatable(Of Autor)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{LivrEtec.Autor}
  - System.IEquatable{LivrEtec.Autor}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: LivrEtec.Autor.Id
  commentId: P:LivrEtec.Autor.Id
  id: Id
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Autor.Id
  fullName: LivrEtec.Autor.Id
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Id
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 7
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      [Key]

      [Required]

      [InteiroPositivo("Id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      <Key>

      <Required>

      <InteiroPositivo("Id")>

      Public Property Id As Integer
  overload: LivrEtec.Autor.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: LivrEtec.InteiroPositivoAttribute
    ctor: LivrEtec.InteiroPositivoAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.Nome
  commentId: P:LivrEtec.Autor.Nome
  id: Nome
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Nome
  nameWithType: Autor.Nome
  fullName: LivrEtec.Autor.Nome
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Nome
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 10
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [Required]

      public string Nome { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Nome As String
  overload: LivrEtec.Autor.Nome*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.Livros
  commentId: P:LivrEtec.Autor.Livros
  id: Livros
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Livros
  nameWithType: Autor.Livros
  fullName: LivrEtec.Autor.Livros
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Livros
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 12
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public List<Livro> Livros { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{LivrEtec.Livro}
    content.vb: Public Property Livros As List(Of Livro)
  overload: LivrEtec.Autor.Livros*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.#ctor
  commentId: M:LivrEtec.Autor.#ctor
  id: '#ctor'
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Autor()
  nameWithType: Autor.Autor()
  fullName: LivrEtec.Autor.Autor()
  type: Constructor
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 13
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public Autor()
    content.vb: Public Sub New
  overload: LivrEtec.Autor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.#ctor(System.Int32,System.String)
  commentId: M:LivrEtec.Autor.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Autor(Int32, String)
  nameWithType: Autor.Autor(Int32, String)
  fullName: LivrEtec.Autor.Autor(System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 14
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public Autor(int id = 0, string nome = null)
    parameters:
    - id: id
      type: System.Int32
    - id: nome
      type: System.String
    content.vb: Public Sub New(id As Integer = 0, nome As String = Nothing)
  overload: LivrEtec.Autor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.#ctor(System.Int32)
  commentId: M:LivrEtec.Autor.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Autor(Int32)
  nameWithType: Autor.Autor(Int32)
  fullName: LivrEtec.Autor.Autor(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 19
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public Autor(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Public Sub New(id As Integer)
  overload: LivrEtec.Autor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.CompareTo(LivrEtec.Autor)
  commentId: M:LivrEtec.Autor.CompareTo(LivrEtec.Autor)
  id: CompareTo(LivrEtec.Autor)
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: CompareTo(Autor)
  nameWithType: Autor.CompareTo(Autor)
  fullName: LivrEtec.Autor.CompareTo(LivrEtec.Autor)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: CompareTo
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 24
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public int CompareTo(Autor other)
    parameters:
    - id: other
      type: LivrEtec.Autor
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Autor) As Integer
  overload: LivrEtec.Autor.CompareTo*
  implements:
  - System.IComparable{LivrEtec.Autor}.CompareTo(LivrEtec.Autor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.Equals(System.Object)
  commentId: M:LivrEtec.Autor.Equals(System.Object)
  id: Equals(System.Object)
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Autor.Equals(Object)
  fullName: LivrEtec.Autor.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Equals
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 30
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: LivrEtec.Autor.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: LivrEtec.Autor.Equals(LivrEtec.Autor)
  commentId: M:LivrEtec.Autor.Equals(LivrEtec.Autor)
  id: Equals(LivrEtec.Autor)
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Equals(Autor)
  nameWithType: Autor.Equals(Autor)
  fullName: LivrEtec.Autor.Equals(LivrEtec.Autor)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Equals
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 35
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public bool Equals(Autor other)
    parameters:
    - id: other
      type: LivrEtec.Autor
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Autor) As Boolean
  overload: LivrEtec.Autor.Equals*
  implements:
  - System.IEquatable{LivrEtec.Autor}.Equals(LivrEtec.Autor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Autor.GetHashCode
  commentId: M:LivrEtec.Autor.GetHashCode
  id: GetHashCode
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Autor.GetHashCode()
  fullName: LivrEtec.Autor.GetHashCode()
  type: Method
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: GetHashCode
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 42
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: LivrEtec.Autor.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: LivrEtec.Autor.op_Equality(LivrEtec.Autor,LivrEtec.Autor)
  commentId: M:LivrEtec.Autor.op_Equality(LivrEtec.Autor,LivrEtec.Autor)
  id: op_Equality(LivrEtec.Autor,LivrEtec.Autor)
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Equality(Autor, Autor)
  nameWithType: Autor.Equality(Autor, Autor)
  fullName: LivrEtec.Autor.Equality(LivrEtec.Autor, LivrEtec.Autor)
  type: Operator
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: op_Equality
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 47
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public static bool operator ==(Autor left, Autor right)
    parameters:
    - id: left
      type: LivrEtec.Autor
    - id: right
      type: LivrEtec.Autor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Autor, right As Autor) As Boolean
  overload: LivrEtec.Autor.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LivrEtec.Autor.op_Inequality(LivrEtec.Autor,LivrEtec.Autor)
  commentId: M:LivrEtec.Autor.op_Inequality(LivrEtec.Autor,LivrEtec.Autor)
  id: op_Inequality(LivrEtec.Autor,LivrEtec.Autor)
  parent: LivrEtec.Autor
  langs:
  - csharp
  - vb
  name: Inequality(Autor, Autor)
  nameWithType: Autor.Inequality(Autor, Autor)
  fullName: LivrEtec.Autor.Inequality(LivrEtec.Autor, LivrEtec.Autor)
  type: Operator
  source:
    remote:
      path: src/LivrEtec/Models/Autor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: op_Inequality
    path: ../src/LivrEtec/Models/Autor.cs
    startLine: 52
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public static bool operator !=(Autor left, Autor right)
    parameters:
    - id: left
      type: LivrEtec.Autor
    - id: right
      type: LivrEtec.Autor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Autor, right As Autor) As Boolean
  overload: LivrEtec.Autor.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{LivrEtec.Autor}
  commentId: T:System.IComparable{LivrEtec.Autor}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Autor>
  nameWithType: IComparable<Autor>
  fullName: System.IComparable<LivrEtec.Autor>
  nameWithType.vb: IComparable(Of Autor)
  fullName.vb: System.IComparable(Of LivrEtec.Autor)
  name.vb: IComparable(Of Autor)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{LivrEtec.Autor}
  commentId: T:System.IEquatable{LivrEtec.Autor}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Autor>
  nameWithType: IEquatable<Autor>
  fullName: System.IEquatable<LivrEtec.Autor>
  nameWithType.vb: IEquatable(Of Autor)
  fullName.vb: System.IEquatable(Of LivrEtec.Autor)
  name.vb: IEquatable(Of Autor)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Autor.Id*
  commentId: Overload:LivrEtec.Autor.Id
  name: Id
  nameWithType: Autor.Id
  fullName: LivrEtec.Autor.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: LivrEtec.Autor.Nome*
  commentId: Overload:LivrEtec.Autor.Nome
  name: Nome
  nameWithType: Autor.Nome
  fullName: LivrEtec.Autor.Nome
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: LivrEtec.Autor.Livros*
  commentId: Overload:LivrEtec.Autor.Livros
  name: Livros
  nameWithType: Autor.Livros
  fullName: LivrEtec.Autor.Livros
- uid: System.Collections.Generic.List{LivrEtec.Livro}
  commentId: T:System.Collections.Generic.List{LivrEtec.Livro}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Livro>
  nameWithType: List<Livro>
  fullName: System.Collections.Generic.List<LivrEtec.Livro>
  nameWithType.vb: List(Of Livro)
  fullName.vb: System.Collections.Generic.List(Of LivrEtec.Livro)
  name.vb: List(Of Livro)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Livro
    name: Livro
    nameWithType: Livro
    fullName: LivrEtec.Livro
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Livro
    name: Livro
    nameWithType: Livro
    fullName: LivrEtec.Livro
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LivrEtec.Autor.#ctor*
  commentId: Overload:LivrEtec.Autor.#ctor
  name: Autor
  nameWithType: Autor.Autor
  fullName: LivrEtec.Autor.Autor
- uid: LivrEtec.Autor.CompareTo*
  commentId: Overload:LivrEtec.Autor.CompareTo
  name: CompareTo
  nameWithType: Autor.CompareTo
  fullName: LivrEtec.Autor.CompareTo
- uid: System.IComparable{LivrEtec.Autor}.CompareTo(LivrEtec.Autor)
  commentId: M:System.IComparable{LivrEtec.Autor}.CompareTo(LivrEtec.Autor)
  parent: System.IComparable{LivrEtec.Autor}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Autor)
  nameWithType: IComparable<Autor>.CompareTo(Autor)
  fullName: System.IComparable<LivrEtec.Autor>.CompareTo(LivrEtec.Autor)
  nameWithType.vb: IComparable(Of Autor).CompareTo(Autor)
  fullName.vb: System.IComparable(Of LivrEtec.Autor).CompareTo(LivrEtec.Autor)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Autor>.CompareTo
    fullName: System.IComparable<LivrEtec.Autor>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Autor).CompareTo
    fullName: System.IComparable(Of LivrEtec.Autor).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Autor
  commentId: T:LivrEtec.Autor
  parent: LivrEtec
  name: Autor
  nameWithType: Autor
  fullName: LivrEtec.Autor
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Autor.Equals*
  commentId: Overload:LivrEtec.Autor.Equals
  name: Equals
  nameWithType: Autor.Equals
  fullName: LivrEtec.Autor.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{LivrEtec.Autor}.Equals(LivrEtec.Autor)
  commentId: M:System.IEquatable{LivrEtec.Autor}.Equals(LivrEtec.Autor)
  parent: System.IEquatable{LivrEtec.Autor}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Autor)
  nameWithType: IEquatable<Autor>.Equals(Autor)
  fullName: System.IEquatable<LivrEtec.Autor>.Equals(LivrEtec.Autor)
  nameWithType.vb: IEquatable(Of Autor).Equals(Autor)
  fullName.vb: System.IEquatable(Of LivrEtec.Autor).Equals(LivrEtec.Autor)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Autor>.Equals
    fullName: System.IEquatable<LivrEtec.Autor>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Autor).Equals
    fullName: System.IEquatable(Of LivrEtec.Autor).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Autor.GetHashCode*
  commentId: Overload:LivrEtec.Autor.GetHashCode
  name: GetHashCode
  nameWithType: Autor.GetHashCode
  fullName: LivrEtec.Autor.GetHashCode
- uid: LivrEtec.Autor.op_Equality*
  commentId: Overload:LivrEtec.Autor.op_Equality
  name: Equality
  nameWithType: Autor.Equality
  fullName: LivrEtec.Autor.Equality
- uid: LivrEtec.Autor.op_Inequality*
  commentId: Overload:LivrEtec.Autor.op_Inequality
  name: Inequality
  nameWithType: Autor.Inequality
  fullName: LivrEtec.Autor.Inequality
