### YamlMime:ManagedReference
items:
- uid: LivrEtec.IEmprestimoService
  commentId: T:LivrEtec.IEmprestimoService
  id: IEmprestimoService
  parent: LivrEtec
  children:
  - LivrEtec.IEmprestimoService.Abrir(System.Int32,System.Int32)
  - LivrEtec.IEmprestimoService.Buscar(LivrEtec.ParamBuscaEmprestimo)
  - LivrEtec.IEmprestimoService.Devolver(System.Int32,System.Nullable{System.Boolean},System.String)
  - LivrEtec.IEmprestimoService.Excluir(System.Int32)
  - LivrEtec.IEmprestimoService.Prorrogar(System.Int32,System.DateTime)
  - LivrEtec.IEmprestimoService.RegistrarPerda(System.Int32)
  langs:
  - csharp
  - vb
  name: IEmprestimoService
  nameWithType: IEmprestimoService
  fullName: LivrEtec.IEmprestimoService
  type: Interface
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: IEmprestimoService
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 8
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public interface IEmprestimoService
    content.vb: Public Interface IEmprestimoService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: LivrEtec.IEmprestimoService.Abrir(System.Int32,System.Int32)
  commentId: M:LivrEtec.IEmprestimoService.Abrir(System.Int32,System.Int32)
  id: Abrir(System.Int32,System.Int32)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: Abrir(Int32, Int32)
  nameWithType: IEmprestimoService.Abrir(Int32, Int32)
  fullName: LivrEtec.IEmprestimoService.Abrir(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Abrir
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 10
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task<int> Abrir(int idPessoa, int idlivro)
    parameters:
    - id: idPessoa
      type: System.Int32
    - id: idlivro
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function Abrir(idPessoa As Integer, idlivro As Integer) As Task(Of Integer)
  overload: LivrEtec.IEmprestimoService.Abrir*
- uid: LivrEtec.IEmprestimoService.Buscar(LivrEtec.ParamBuscaEmprestimo)
  commentId: M:LivrEtec.IEmprestimoService.Buscar(LivrEtec.ParamBuscaEmprestimo)
  id: Buscar(LivrEtec.ParamBuscaEmprestimo)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: Buscar(ParamBuscaEmprestimo)
  nameWithType: IEmprestimoService.Buscar(ParamBuscaEmprestimo)
  fullName: LivrEtec.IEmprestimoService.Buscar(LivrEtec.ParamBuscaEmprestimo)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Buscar
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 11
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task<IEnumerable<Emprestimo>> Buscar(ParamBuscaEmprestimo parametros)
    parameters:
    - id: parametros
      type: LivrEtec.ParamBuscaEmprestimo
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LivrEtec.Emprestimo}}
    content.vb: Function Buscar(parametros As ParamBuscaEmprestimo) As Task(Of IEnumerable(Of Emprestimo))
  overload: LivrEtec.IEmprestimoService.Buscar*
- uid: LivrEtec.IEmprestimoService.Prorrogar(System.Int32,System.DateTime)
  commentId: M:LivrEtec.IEmprestimoService.Prorrogar(System.Int32,System.DateTime)
  id: Prorrogar(System.Int32,System.DateTime)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: Prorrogar(Int32, DateTime)
  nameWithType: IEmprestimoService.Prorrogar(Int32, DateTime)
  fullName: LivrEtec.IEmprestimoService.Prorrogar(System.Int32, System.DateTime)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Prorrogar
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 12
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task Prorrogar(int idEmprestimo, DateTime novaData)
    parameters:
    - id: idEmprestimo
      type: System.Int32
    - id: novaData
      type: System.DateTime
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Prorrogar(idEmprestimo As Integer, novaData As Date) As Task
  overload: LivrEtec.IEmprestimoService.Prorrogar*
- uid: LivrEtec.IEmprestimoService.Devolver(System.Int32,System.Nullable{System.Boolean},System.String)
  commentId: M:LivrEtec.IEmprestimoService.Devolver(System.Int32,System.Nullable{System.Boolean},System.String)
  id: Devolver(System.Int32,System.Nullable{System.Boolean},System.String)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: Devolver(Int32, Nullable<Boolean>, String)
  nameWithType: IEmprestimoService.Devolver(Int32, Nullable<Boolean>, String)
  fullName: LivrEtec.IEmprestimoService.Devolver(System.Int32, System.Nullable<System.Boolean>, System.String)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Devolver
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 13
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task Devolver(int idEmprestimo, bool? AtrasoJustificado = null, string ExplicacaoAtraso = null)
    parameters:
    - id: idEmprestimo
      type: System.Int32
    - id: AtrasoJustificado
      type: System.Nullable{System.Boolean}
    - id: ExplicacaoAtraso
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Devolver(idEmprestimo As Integer, AtrasoJustificado As Boolean? = Nothing, ExplicacaoAtraso As String = Nothing) As Task
  overload: LivrEtec.IEmprestimoService.Devolver*
  nameWithType.vb: IEmprestimoService.Devolver(Int32, Nullable(Of Boolean), String)
  fullName.vb: LivrEtec.IEmprestimoService.Devolver(System.Int32, System.Nullable(Of System.Boolean), System.String)
  name.vb: Devolver(Int32, Nullable(Of Boolean), String)
- uid: LivrEtec.IEmprestimoService.RegistrarPerda(System.Int32)
  commentId: M:LivrEtec.IEmprestimoService.RegistrarPerda(System.Int32)
  id: RegistrarPerda(System.Int32)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: RegistrarPerda(Int32)
  nameWithType: IEmprestimoService.RegistrarPerda(Int32)
  fullName: LivrEtec.IEmprestimoService.RegistrarPerda(System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: RegistrarPerda
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 14
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task RegistrarPerda(int idEmprestimo)
    parameters:
    - id: idEmprestimo
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RegistrarPerda(idEmprestimo As Integer) As Task
  overload: LivrEtec.IEmprestimoService.RegistrarPerda*
- uid: LivrEtec.IEmprestimoService.Excluir(System.Int32)
  commentId: M:LivrEtec.IEmprestimoService.Excluir(System.Int32)
  id: Excluir(System.Int32)
  parent: LivrEtec.IEmprestimoService
  langs:
  - csharp
  - vb
  name: Excluir(Int32)
  nameWithType: IEmprestimoService.Excluir(Int32)
  fullName: LivrEtec.IEmprestimoService.Excluir(System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Services/IEmprestimoService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Excluir
    path: ../src/LivrEtec/Services/IEmprestimoService.cs
    startLine: 15
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: Task Excluir(int idEmprestimo)
    parameters:
    - id: idEmprestimo
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Excluir(idEmprestimo As Integer) As Task
  overload: LivrEtec.IEmprestimoService.Excluir*
references:
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: LivrEtec.IEmprestimoService.Abrir*
  commentId: Overload:LivrEtec.IEmprestimoService.Abrir
  name: Abrir
  nameWithType: IEmprestimoService.Abrir
  fullName: LivrEtec.IEmprestimoService.Abrir
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: LivrEtec.IEmprestimoService.Buscar*
  commentId: Overload:LivrEtec.IEmprestimoService.Buscar
  name: Buscar
  nameWithType: IEmprestimoService.Buscar
  fullName: LivrEtec.IEmprestimoService.Buscar
- uid: LivrEtec.ParamBuscaEmprestimo
  commentId: T:LivrEtec.ParamBuscaEmprestimo
  parent: LivrEtec
  name: ParamBuscaEmprestimo
  nameWithType: ParamBuscaEmprestimo
  fullName: LivrEtec.ParamBuscaEmprestimo
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LivrEtec.Emprestimo}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LivrEtec.Emprestimo}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<Emprestimo>>
  nameWithType: Task<IEnumerable<Emprestimo>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<LivrEtec.Emprestimo>>
  nameWithType.vb: Task(Of IEnumerable(Of Emprestimo))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of LivrEtec.Emprestimo))
  name.vb: Task(Of IEnumerable(Of Emprestimo))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Emprestimo
    name: Emprestimo
    nameWithType: Emprestimo
    fullName: LivrEtec.Emprestimo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Emprestimo
    name: Emprestimo
    nameWithType: Emprestimo
    fullName: LivrEtec.Emprestimo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.IEmprestimoService.Prorrogar*
  commentId: Overload:LivrEtec.IEmprestimoService.Prorrogar
  name: Prorrogar
  nameWithType: IEmprestimoService.Prorrogar
  fullName: LivrEtec.IEmprestimoService.Prorrogar
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: LivrEtec.IEmprestimoService.Devolver*
  commentId: Overload:LivrEtec.IEmprestimoService.Devolver
  name: Devolver
  nameWithType: IEmprestimoService.Devolver
  fullName: LivrEtec.IEmprestimoService.Devolver
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.IEmprestimoService.RegistrarPerda*
  commentId: Overload:LivrEtec.IEmprestimoService.RegistrarPerda
  name: RegistrarPerda
  nameWithType: IEmprestimoService.RegistrarPerda
  fullName: LivrEtec.IEmprestimoService.RegistrarPerda
- uid: LivrEtec.IEmprestimoService.Excluir*
  commentId: Overload:LivrEtec.IEmprestimoService.Excluir
  name: Excluir
  nameWithType: IEmprestimoService.Excluir
  fullName: LivrEtec.IEmprestimoService.Excluir
