### YamlMime:ManagedReference
items:
- uid: LivrEtec.Permissao
  commentId: T:LivrEtec.Permissao
  id: Permissao
  parent: LivrEtec
  children:
  - LivrEtec.Permissao.#ctor
  - LivrEtec.Permissao.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.List{LivrEtec.Permissao})
  - LivrEtec.Permissao.Cargos
  - LivrEtec.Permissao.CompareTo(LivrEtec.Permissao)
  - LivrEtec.Permissao.Descricao
  - LivrEtec.Permissao.Id
  - LivrEtec.Permissao.Nome
  - LivrEtec.Permissao.PermissoesDependete
  langs:
  - csharp
  - vb
  name: Permissao
  nameWithType: Permissao
  fullName: LivrEtec.Permissao
  type: Class
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Permissao
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 5
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [Display]

      public sealed class Permissao : IComparable<Permissao>
    content.vb: >-
      <Display>

      Public NotInheritable Class Permissao

          Implements IComparable(Of Permissao)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{LivrEtec.Permissao}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: LivrEtec.Permissao.#ctor
  commentId: M:LivrEtec.Permissao.#ctor
  id: '#ctor'
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Permissao()
  nameWithType: Permissao.Permissao()
  fullName: LivrEtec.Permissao.Permissao()
  type: Constructor
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 9
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public Permissao()
    content.vb: Public Sub New
  overload: LivrEtec.Permissao.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.List{LivrEtec.Permissao})
  commentId: M:LivrEtec.Permissao.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.List{LivrEtec.Permissao})
  id: '#ctor(System.Int32,System.String,System.String,System.Collections.Generic.List{LivrEtec.Permissao})'
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Permissao(Int32, String, String, List<Permissao>)
  nameWithType: Permissao.Permissao(Int32, String, String, List<Permissao>)
  fullName: LivrEtec.Permissao.Permissao(System.Int32, System.String, System.String, System.Collections.Generic.List<LivrEtec.Permissao>)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 13
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public Permissao(int id, string nome, string descricao, List<Permissao> permissoesDependete = null)
    parameters:
    - id: id
      type: System.Int32
    - id: nome
      type: System.String
    - id: descricao
      type: System.String
    - id: permissoesDependete
      type: System.Collections.Generic.List{LivrEtec.Permissao}
    content.vb: Public Sub New(id As Integer, nome As String, descricao As String, permissoesDependete As List(Of Permissao) = Nothing)
  overload: LivrEtec.Permissao.#ctor*
  nameWithType.vb: Permissao.Permissao(Int32, String, String, List(Of Permissao))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Permissao.Permissao(System.Int32, System.String, System.String, System.Collections.Generic.List(Of LivrEtec.Permissao))
  name.vb: Permissao(Int32, String, String, List(Of Permissao))
- uid: LivrEtec.Permissao.Id
  commentId: P:LivrEtec.Permissao.Id
  id: Id
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Permissao.Id
  fullName: LivrEtec.Permissao.Id
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Id
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 22
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      [Key]

      [Required]

      [InteiroPositivo("Id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      <Key>

      <Required>

      <InteiroPositivo("Id")>

      Public Property Id As Integer
  overload: LivrEtec.Permissao.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: LivrEtec.InteiroPositivoAttribute
    ctor: LivrEtec.InteiroPositivoAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.Nome
  commentId: P:LivrEtec.Permissao.Nome
  id: Nome
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Nome
  nameWithType: Permissao.Nome
  fullName: LivrEtec.Permissao.Nome
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Nome
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 25
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [Required]

      public string Nome { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Nome As String
  overload: LivrEtec.Permissao.Nome*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.Descricao
  commentId: P:LivrEtec.Permissao.Descricao
  id: Descricao
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Descricao
  nameWithType: Permissao.Descricao
  fullName: LivrEtec.Permissao.Descricao
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Descricao
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 27
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [Required]

      public string Descricao { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Descricao As String
  overload: LivrEtec.Permissao.Descricao*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.PermissoesDependete
  commentId: P:LivrEtec.Permissao.PermissoesDependete
  id: PermissoesDependete
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: PermissoesDependete
  nameWithType: Permissao.PermissoesDependete
  fullName: LivrEtec.Permissao.PermissoesDependete
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: PermissoesDependete
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 29
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public List<Permissao> PermissoesDependete { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{LivrEtec.Permissao}
    content.vb: Public Property PermissoesDependete As List(Of Permissao)
  overload: LivrEtec.Permissao.PermissoesDependete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.Cargos
  commentId: P:LivrEtec.Permissao.Cargos
  id: Cargos
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: Cargos
  nameWithType: Permissao.Cargos
  fullName: LivrEtec.Permissao.Cargos
  type: Property
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Cargos
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 30
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: >-
      [Required]

      public List<Cargo> Cargos { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{LivrEtec.Cargo}
    content.vb: >-
      <Required>

      Public Property Cargos As List(Of Cargo)
  overload: LivrEtec.Permissao.Cargos*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LivrEtec.Permissao.CompareTo(LivrEtec.Permissao)
  commentId: M:LivrEtec.Permissao.CompareTo(LivrEtec.Permissao)
  id: CompareTo(LivrEtec.Permissao)
  parent: LivrEtec.Permissao
  langs:
  - csharp
  - vb
  name: CompareTo(Permissao)
  nameWithType: Permissao.CompareTo(Permissao)
  fullName: LivrEtec.Permissao.CompareTo(LivrEtec.Permissao)
  type: Method
  source:
    remote:
      path: src/LivrEtec/Models/Permissao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: CompareTo
    path: ../src/LivrEtec/Models/Permissao.cs
    startLine: 33
  assemblies:
  - LivrEtec
  namespace: LivrEtec
  syntax:
    content: public int CompareTo(Permissao other)
    parameters:
    - id: other
      type: LivrEtec.Permissao
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Permissao) As Integer
  overload: LivrEtec.Permissao.CompareTo*
  implements:
  - System.IComparable{LivrEtec.Permissao}.CompareTo(LivrEtec.Permissao)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{LivrEtec.Permissao}
  commentId: T:System.IComparable{LivrEtec.Permissao}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Permissao>
  nameWithType: IComparable<Permissao>
  fullName: System.IComparable<LivrEtec.Permissao>
  nameWithType.vb: IComparable(Of Permissao)
  fullName.vb: System.IComparable(Of LivrEtec.Permissao)
  name.vb: IComparable(Of Permissao)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Permissao.#ctor*
  commentId: Overload:LivrEtec.Permissao.#ctor
  name: Permissao
  nameWithType: Permissao.Permissao
  fullName: LivrEtec.Permissao.Permissao
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{LivrEtec.Permissao}
  commentId: T:System.Collections.Generic.List{LivrEtec.Permissao}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Permissao>
  nameWithType: List<Permissao>
  fullName: System.Collections.Generic.List<LivrEtec.Permissao>
  nameWithType.vb: List(Of Permissao)
  fullName.vb: System.Collections.Generic.List(Of LivrEtec.Permissao)
  name.vb: List(Of Permissao)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LivrEtec.Permissao.Id*
  commentId: Overload:LivrEtec.Permissao.Id
  name: Id
  nameWithType: Permissao.Id
  fullName: LivrEtec.Permissao.Id
- uid: LivrEtec.Permissao.Nome*
  commentId: Overload:LivrEtec.Permissao.Nome
  name: Nome
  nameWithType: Permissao.Nome
  fullName: LivrEtec.Permissao.Nome
- uid: LivrEtec.Permissao.Descricao*
  commentId: Overload:LivrEtec.Permissao.Descricao
  name: Descricao
  nameWithType: Permissao.Descricao
  fullName: LivrEtec.Permissao.Descricao
- uid: LivrEtec.Permissao.PermissoesDependete*
  commentId: Overload:LivrEtec.Permissao.PermissoesDependete
  name: PermissoesDependete
  nameWithType: Permissao.PermissoesDependete
  fullName: LivrEtec.Permissao.PermissoesDependete
- uid: LivrEtec.Permissao.Cargos*
  commentId: Overload:LivrEtec.Permissao.Cargos
  name: Cargos
  nameWithType: Permissao.Cargos
  fullName: LivrEtec.Permissao.Cargos
- uid: System.Collections.Generic.List{LivrEtec.Cargo}
  commentId: T:System.Collections.Generic.List{LivrEtec.Cargo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Cargo>
  nameWithType: List<Cargo>
  fullName: System.Collections.Generic.List<LivrEtec.Cargo>
  nameWithType.vb: List(Of Cargo)
  fullName.vb: System.Collections.Generic.List(Of LivrEtec.Cargo)
  name.vb: List(Of Cargo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Cargo
    name: Cargo
    nameWithType: Cargo
    fullName: LivrEtec.Cargo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Cargo
    name: Cargo
    nameWithType: Cargo
    fullName: LivrEtec.Cargo
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Permissao.CompareTo*
  commentId: Overload:LivrEtec.Permissao.CompareTo
  name: CompareTo
  nameWithType: Permissao.CompareTo
  fullName: LivrEtec.Permissao.CompareTo
- uid: System.IComparable{LivrEtec.Permissao}.CompareTo(LivrEtec.Permissao)
  commentId: M:System.IComparable{LivrEtec.Permissao}.CompareTo(LivrEtec.Permissao)
  parent: System.IComparable{LivrEtec.Permissao}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Permissao)
  nameWithType: IComparable<Permissao>.CompareTo(Permissao)
  fullName: System.IComparable<LivrEtec.Permissao>.CompareTo(LivrEtec.Permissao)
  nameWithType.vb: IComparable(Of Permissao).CompareTo(Permissao)
  fullName.vb: System.IComparable(Of LivrEtec.Permissao).CompareTo(LivrEtec.Permissao)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Permissao>.CompareTo
    fullName: System.IComparable<LivrEtec.Permissao>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Permissao).CompareTo
    fullName: System.IComparable(Of LivrEtec.Permissao).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Permissao
    name: Permissao
    nameWithType: Permissao
    fullName: LivrEtec.Permissao
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Permissao
  commentId: T:LivrEtec.Permissao
  parent: LivrEtec
  name: Permissao
  nameWithType: Permissao
  fullName: LivrEtec.Permissao
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
