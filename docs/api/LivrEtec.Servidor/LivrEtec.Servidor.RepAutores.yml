### YamlMime:ManagedReference
items:
- uid: LivrEtec.Servidor.RepAutores
  commentId: T:LivrEtec.Servidor.RepAutores
  id: RepAutores
  parent: LivrEtec.Servidor
  children:
  - LivrEtec.Servidor.RepAutores.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores})
  - LivrEtec.Servidor.RepAutores.Registrar(LivrEtec.Autor)
  - LivrEtec.Servidor.RepAutores.Todos
  langs:
  - csharp
  - vb
  name: RepAutores
  nameWithType: RepAutores
  fullName: LivrEtec.Servidor.RepAutores
  type: Class
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepAutores.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: RepAutores
    path: ../LivrEtec.Servidor/Repositorios/RepAutores.cs
    startLine: 4
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: 'public sealed class RepAutores : Repositorio, IRepAutores'
    content.vb: >-
      Public NotInheritable Class RepAutores

          Inherits Repositorio

          Implements IRepAutores
  inheritance:
  - System.Object
  - LivrEtec.Servidor.Repositorio
  implements:
  - LivrEtec.IRepAutores
  inheritedMembers:
  - LivrEtec.Servidor.Repositorio.BD
  - LivrEtec.Servidor.Repositorio.logger
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: LivrEtec.Servidor.RepAutores.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores})
  commentId: M:LivrEtec.Servidor.RepAutores.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores})
  id: '#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores})'
  parent: LivrEtec.Servidor.RepAutores
  langs:
  - csharp
  - vb
  name: RepAutores(PacaContext, ILogger<RepAutores>)
  nameWithType: RepAutores.RepAutores(PacaContext, ILogger<RepAutores>)
  fullName: LivrEtec.Servidor.RepAutores.RepAutores(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepAutores>)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepAutores.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../LivrEtec.Servidor/Repositorios/RepAutores.cs
    startLine: 6
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public RepAutores(PacaContext BD, ILogger<RepAutores> logger)
    parameters:
    - id: BD
      type: LivrEtec.Servidor.PacaContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores}
    content.vb: Public Sub New(BD As PacaContext, logger As ILogger(Of RepAutores))
  overload: LivrEtec.Servidor.RepAutores.#ctor*
  nameWithType.vb: RepAutores.RepAutores(PacaContext, ILogger(Of RepAutores))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Servidor.RepAutores.RepAutores(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepAutores))
  name.vb: RepAutores(PacaContext, ILogger(Of RepAutores))
- uid: LivrEtec.Servidor.RepAutores.Registrar(LivrEtec.Autor)
  commentId: M:LivrEtec.Servidor.RepAutores.Registrar(LivrEtec.Autor)
  id: Registrar(LivrEtec.Autor)
  parent: LivrEtec.Servidor.RepAutores
  langs:
  - csharp
  - vb
  name: Registrar(Autor)
  nameWithType: RepAutores.Registrar(Autor)
  fullName: LivrEtec.Servidor.RepAutores.Registrar(LivrEtec.Autor)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepAutores.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar
    path: ../LivrEtec.Servidor/Repositorios/RepAutores.cs
    startLine: 10
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public async Task Registrar(Autor autor)
    parameters:
    - id: autor
      type: LivrEtec.Autor
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Registrar(autor As Autor) As Task
  overload: LivrEtec.Servidor.RepAutores.Registrar*
  implements:
  - LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: LivrEtec.Servidor.RepAutores.Todos
  commentId: M:LivrEtec.Servidor.RepAutores.Todos
  id: Todos
  parent: LivrEtec.Servidor.RepAutores
  langs:
  - csharp
  - vb
  name: Todos()
  nameWithType: RepAutores.Todos()
  fullName: LivrEtec.Servidor.RepAutores.Todos()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepAutores.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Todos
    path: ../LivrEtec.Servidor/Repositorios/RepAutores.cs
    startLine: 18
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public IAsyncEnumerable<Autor> Todos()
    return:
      type: System.Collections.Generic.IAsyncEnumerable{LivrEtec.Autor}
    content.vb: Public Function Todos As IAsyncEnumerable(Of Autor)
  overload: LivrEtec.Servidor.RepAutores.Todos*
  implements:
  - LivrEtec.IRepAutores.Todos
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: LivrEtec.Servidor
  commentId: N:LivrEtec.Servidor
  name: LivrEtec.Servidor
  nameWithType: LivrEtec.Servidor
  fullName: LivrEtec.Servidor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: LivrEtec.Servidor.Repositorio
  commentId: T:LivrEtec.Servidor.Repositorio
  parent: LivrEtec.Servidor
  name: Repositorio
  nameWithType: Repositorio
  fullName: LivrEtec.Servidor.Repositorio
- uid: LivrEtec.IRepAutores
  commentId: T:LivrEtec.IRepAutores
  parent: LivrEtec
  name: IRepAutores
  nameWithType: IRepAutores
  fullName: LivrEtec.IRepAutores
- uid: LivrEtec.Servidor.Repositorio.BD
  commentId: F:LivrEtec.Servidor.Repositorio.BD
  parent: LivrEtec.Servidor.Repositorio
  name: BD
  nameWithType: Repositorio.BD
  fullName: LivrEtec.Servidor.Repositorio.BD
- uid: LivrEtec.Servidor.Repositorio.logger
  commentId: F:LivrEtec.Servidor.Repositorio.logger
  parent: LivrEtec.Servidor.Repositorio
  name: logger
  nameWithType: Repositorio.logger
  fullName: LivrEtec.Servidor.Repositorio.logger
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: LivrEtec.Servidor.RepAutores.#ctor*
  commentId: Overload:LivrEtec.Servidor.RepAutores.#ctor
  name: RepAutores
  nameWithType: RepAutores.RepAutores
  fullName: LivrEtec.Servidor.RepAutores.RepAutores
- uid: LivrEtec.Servidor.PacaContext
  commentId: T:LivrEtec.Servidor.PacaContext
  parent: LivrEtec.Servidor
  name: PacaContext
  nameWithType: PacaContext
  fullName: LivrEtec.Servidor.PacaContext
- uid: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores}
  commentId: T:Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepAutores}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<RepAutores>
  nameWithType: ILogger<RepAutores>
  fullName: Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepAutores>
  nameWithType.vb: ILogger(Of RepAutores)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepAutores)
  name.vb: ILogger(Of RepAutores)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Servidor.RepAutores
    name: RepAutores
    nameWithType: RepAutores
    fullName: LivrEtec.Servidor.RepAutores
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Servidor.RepAutores
    name: RepAutores
    nameWithType: RepAutores
    fullName: LivrEtec.Servidor.RepAutores
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: LivrEtec.Servidor.RepAutores.Registrar*
  commentId: Overload:LivrEtec.Servidor.RepAutores.Registrar
  name: Registrar
  nameWithType: RepAutores.Registrar
  fullName: LivrEtec.Servidor.RepAutores.Registrar
- uid: LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
  commentId: M:LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
  parent: LivrEtec.IRepAutores
  name: Registrar(Autor)
  nameWithType: IRepAutores.Registrar(Autor)
  fullName: LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
  spec.csharp:
  - uid: LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
    name: Registrar
    nameWithType: IRepAutores.Registrar
    fullName: LivrEtec.IRepAutores.Registrar
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LivrEtec.IRepAutores.Registrar(LivrEtec.Autor)
    name: Registrar
    nameWithType: IRepAutores.Registrar
    fullName: LivrEtec.IRepAutores.Registrar
  - name: (
    nameWithType: (
    fullName: (
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.Autor
  commentId: T:LivrEtec.Autor
  parent: LivrEtec
  name: Autor
  nameWithType: Autor
  fullName: LivrEtec.Autor
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: LivrEtec.Servidor.RepAutores.Todos*
  commentId: Overload:LivrEtec.Servidor.RepAutores.Todos
  name: Todos
  nameWithType: RepAutores.Todos
  fullName: LivrEtec.Servidor.RepAutores.Todos
- uid: LivrEtec.IRepAutores.Todos
  commentId: M:LivrEtec.IRepAutores.Todos
  parent: LivrEtec.IRepAutores
  name: Todos()
  nameWithType: IRepAutores.Todos()
  fullName: LivrEtec.IRepAutores.Todos()
  spec.csharp:
  - uid: LivrEtec.IRepAutores.Todos
    name: Todos
    nameWithType: IRepAutores.Todos
    fullName: LivrEtec.IRepAutores.Todos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LivrEtec.IRepAutores.Todos
    name: Todos
    nameWithType: IRepAutores.Todos
    fullName: LivrEtec.IRepAutores.Todos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable{LivrEtec.Autor}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{LivrEtec.Autor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<Autor>
  nameWithType: IAsyncEnumerable<Autor>
  fullName: System.Collections.Generic.IAsyncEnumerable<LivrEtec.Autor>
  nameWithType.vb: IAsyncEnumerable(Of Autor)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of LivrEtec.Autor)
  name.vb: IAsyncEnumerable(Of Autor)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Autor
    name: Autor
    nameWithType: Autor
    fullName: LivrEtec.Autor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
