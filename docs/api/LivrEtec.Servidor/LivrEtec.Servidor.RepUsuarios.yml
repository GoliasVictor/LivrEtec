### YamlMime:ManagedReference
items:
- uid: LivrEtec.Servidor.RepUsuarios
  commentId: T:LivrEtec.Servidor.RepUsuarios
  id: RepUsuarios
  parent: LivrEtec.Servidor
  children:
  - LivrEtec.Servidor.RepUsuarios.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios})
  - LivrEtec.Servidor.RepUsuarios.Existe(System.Int32)
  - LivrEtec.Servidor.RepUsuarios.Obter(System.Int32)
  langs:
  - csharp
  - vb
  name: RepUsuarios
  nameWithType: RepUsuarios
  fullName: LivrEtec.Servidor.RepUsuarios
  type: Class
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepUsuarios.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: RepUsuarios
    path: ../LivrEtec.Servidor/Repositorios/RepUsuarios.cs
    startLine: 4
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: 'public class RepUsuarios : Repositorio, IRepUsuarios'
    content.vb: >-
      Public Class RepUsuarios

          Inherits Repositorio

          Implements IRepUsuarios
  inheritance:
  - System.Object
  - LivrEtec.Servidor.Repositorio
  implements:
  - LivrEtec.Servidor.IRepUsuarios
  inheritedMembers:
  - LivrEtec.Servidor.Repositorio.BD
  - LivrEtec.Servidor.Repositorio.logger
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LivrEtec.Servidor.RepUsuarios.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios})
  commentId: M:LivrEtec.Servidor.RepUsuarios.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios})
  id: '#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios})'
  parent: LivrEtec.Servidor.RepUsuarios
  langs:
  - csharp
  - vb
  name: RepUsuarios(PacaContext, ILogger<RepUsuarios>)
  nameWithType: RepUsuarios.RepUsuarios(PacaContext, ILogger<RepUsuarios>)
  fullName: LivrEtec.Servidor.RepUsuarios.RepUsuarios(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepUsuarios>)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepUsuarios.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../LivrEtec.Servidor/Repositorios/RepUsuarios.cs
    startLine: 7
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public RepUsuarios(PacaContext BD, ILogger<RepUsuarios> logger)
    parameters:
    - id: BD
      type: LivrEtec.Servidor.PacaContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios}
    content.vb: Public Sub New(BD As PacaContext, logger As ILogger(Of RepUsuarios))
  overload: LivrEtec.Servidor.RepUsuarios.#ctor*
  nameWithType.vb: RepUsuarios.RepUsuarios(PacaContext, ILogger(Of RepUsuarios))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Servidor.RepUsuarios.RepUsuarios(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepUsuarios))
  name.vb: RepUsuarios(PacaContext, ILogger(Of RepUsuarios))
- uid: LivrEtec.Servidor.RepUsuarios.Obter(System.Int32)
  commentId: M:LivrEtec.Servidor.RepUsuarios.Obter(System.Int32)
  id: Obter(System.Int32)
  parent: LivrEtec.Servidor.RepUsuarios
  langs:
  - csharp
  - vb
  name: Obter(Int32)
  nameWithType: RepUsuarios.Obter(Int32)
  fullName: LivrEtec.Servidor.RepUsuarios.Obter(System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepUsuarios.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Obter
    path: ../LivrEtec.Servidor/Repositorios/RepUsuarios.cs
    startLine: 11
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public async Task<Usuario> Obter(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{LivrEtec.Usuario}
    content.vb: Public Function Obter(id As Integer) As Task(Of Usuario)
  overload: LivrEtec.Servidor.RepUsuarios.Obter*
  implements:
  - LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: LivrEtec.Servidor.RepUsuarios.Existe(System.Int32)
  commentId: M:LivrEtec.Servidor.RepUsuarios.Existe(System.Int32)
  id: Existe(System.Int32)
  parent: LivrEtec.Servidor.RepUsuarios
  langs:
  - csharp
  - vb
  name: Existe(Int32)
  nameWithType: RepUsuarios.Existe(Int32)
  fullName: LivrEtec.Servidor.RepUsuarios.Existe(System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepUsuarios.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Existe
    path: ../LivrEtec.Servidor/Repositorios/RepUsuarios.cs
    startLine: 21
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public async Task<bool> Existe(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function Existe(id As Integer) As Task(Of Boolean)
  overload: LivrEtec.Servidor.RepUsuarios.Existe*
  implements:
  - LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: LivrEtec.Servidor
  commentId: N:LivrEtec.Servidor
  name: LivrEtec.Servidor
  nameWithType: LivrEtec.Servidor
  fullName: LivrEtec.Servidor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: LivrEtec.Servidor.Repositorio
  commentId: T:LivrEtec.Servidor.Repositorio
  parent: LivrEtec.Servidor
  name: Repositorio
  nameWithType: Repositorio
  fullName: LivrEtec.Servidor.Repositorio
- uid: LivrEtec.Servidor.IRepUsuarios
  commentId: T:LivrEtec.Servidor.IRepUsuarios
  parent: LivrEtec.Servidor
  name: IRepUsuarios
  nameWithType: IRepUsuarios
  fullName: LivrEtec.Servidor.IRepUsuarios
- uid: LivrEtec.Servidor.Repositorio.BD
  commentId: F:LivrEtec.Servidor.Repositorio.BD
  parent: LivrEtec.Servidor.Repositorio
  name: BD
  nameWithType: Repositorio.BD
  fullName: LivrEtec.Servidor.Repositorio.BD
- uid: LivrEtec.Servidor.Repositorio.logger
  commentId: F:LivrEtec.Servidor.Repositorio.logger
  parent: LivrEtec.Servidor.Repositorio
  name: logger
  nameWithType: Repositorio.logger
  fullName: LivrEtec.Servidor.Repositorio.logger
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LivrEtec.Servidor.RepUsuarios.#ctor*
  commentId: Overload:LivrEtec.Servidor.RepUsuarios.#ctor
  name: RepUsuarios
  nameWithType: RepUsuarios.RepUsuarios
  fullName: LivrEtec.Servidor.RepUsuarios.RepUsuarios
- uid: LivrEtec.Servidor.PacaContext
  commentId: T:LivrEtec.Servidor.PacaContext
  parent: LivrEtec.Servidor
  name: PacaContext
  nameWithType: PacaContext
  fullName: LivrEtec.Servidor.PacaContext
- uid: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios}
  commentId: T:Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepUsuarios}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<RepUsuarios>
  nameWithType: ILogger<RepUsuarios>
  fullName: Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepUsuarios>
  nameWithType.vb: ILogger(Of RepUsuarios)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepUsuarios)
  name.vb: ILogger(Of RepUsuarios)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Servidor.RepUsuarios
    name: RepUsuarios
    nameWithType: RepUsuarios
    fullName: LivrEtec.Servidor.RepUsuarios
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Servidor.RepUsuarios
    name: RepUsuarios
    nameWithType: RepUsuarios
    fullName: LivrEtec.Servidor.RepUsuarios
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: LivrEtec.Servidor.RepUsuarios.Obter*
  commentId: Overload:LivrEtec.Servidor.RepUsuarios.Obter
  name: Obter
  nameWithType: RepUsuarios.Obter
  fullName: LivrEtec.Servidor.RepUsuarios.Obter
- uid: LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
  commentId: M:LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
  parent: LivrEtec.Servidor.IRepUsuarios
  isExternal: true
  name: Obter(Int32)
  nameWithType: IRepUsuarios.Obter(Int32)
  fullName: LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
  spec.csharp:
  - uid: LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
    name: Obter
    nameWithType: IRepUsuarios.Obter
    fullName: LivrEtec.Servidor.IRepUsuarios.Obter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LivrEtec.Servidor.IRepUsuarios.Obter(System.Int32)
    name: Obter
    nameWithType: IRepUsuarios.Obter
    fullName: LivrEtec.Servidor.IRepUsuarios.Obter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{LivrEtec.Usuario}
  commentId: T:System.Threading.Tasks.Task{LivrEtec.Usuario}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Usuario>
  nameWithType: Task<Usuario>
  fullName: System.Threading.Tasks.Task<LivrEtec.Usuario>
  nameWithType.vb: Task(Of Usuario)
  fullName.vb: System.Threading.Tasks.Task(Of LivrEtec.Usuario)
  name.vb: Task(Of Usuario)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Usuario
    name: Usuario
    nameWithType: Usuario
    fullName: LivrEtec.Usuario
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Usuario
    name: Usuario
    nameWithType: Usuario
    fullName: LivrEtec.Usuario
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: LivrEtec.Servidor.RepUsuarios.Existe*
  commentId: Overload:LivrEtec.Servidor.RepUsuarios.Existe
  name: Existe
  nameWithType: RepUsuarios.Existe
  fullName: LivrEtec.Servidor.RepUsuarios.Existe
- uid: LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
  commentId: M:LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
  parent: LivrEtec.Servidor.IRepUsuarios
  isExternal: true
  name: Existe(Int32)
  nameWithType: IRepUsuarios.Existe(Int32)
  fullName: LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
  spec.csharp:
  - uid: LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
    name: Existe
    nameWithType: IRepUsuarios.Existe
    fullName: LivrEtec.Servidor.IRepUsuarios.Existe
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LivrEtec.Servidor.IRepUsuarios.Existe(System.Int32)
    name: Existe
    nameWithType: IRepUsuarios.Existe
    fullName: LivrEtec.Servidor.IRepUsuarios.Existe
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
