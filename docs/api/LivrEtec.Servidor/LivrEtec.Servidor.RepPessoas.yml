### YamlMime:ManagedReference
items:
- uid: LivrEtec.Servidor.RepPessoas
  commentId: T:LivrEtec.Servidor.RepPessoas
  id: RepPessoas
  parent: LivrEtec.Servidor
  children:
  - LivrEtec.Servidor.RepPessoas.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas})
  - LivrEtec.Servidor.RepPessoas.ObterObter(System.Int32)
  langs:
  - csharp
  - vb
  name: RepPessoas
  nameWithType: RepPessoas
  fullName: LivrEtec.Servidor.RepPessoas
  type: Class
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepPessoas.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: RepPessoas
    path: ../LivrEtec.Servidor/Repositorios/RepPessoas.cs
    startLine: 9
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: 'public class RepPessoas : Repositorio, IRepPessoas'
    content.vb: >-
      Public Class RepPessoas

          Inherits Repositorio

          Implements IRepPessoas
  inheritance:
  - System.Object
  - LivrEtec.Servidor.Repositorio
  implements:
  - LivrEtec.IRepPessoas
  inheritedMembers:
  - LivrEtec.Servidor.Repositorio.BD
  - LivrEtec.Servidor.Repositorio.logger
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LivrEtec.Servidor.RepPessoas.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas})
  commentId: M:LivrEtec.Servidor.RepPessoas.#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas})
  id: '#ctor(LivrEtec.Servidor.PacaContext,Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas})'
  parent: LivrEtec.Servidor.RepPessoas
  langs:
  - csharp
  - vb
  name: RepPessoas(PacaContext, ILogger<RepPessoas>)
  nameWithType: RepPessoas.RepPessoas(PacaContext, ILogger<RepPessoas>)
  fullName: LivrEtec.Servidor.RepPessoas.RepPessoas(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepPessoas>)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepPessoas.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../LivrEtec.Servidor/Repositorios/RepPessoas.cs
    startLine: 11
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public RepPessoas(PacaContext BD, ILogger<RepPessoas> logger)
    parameters:
    - id: BD
      type: LivrEtec.Servidor.PacaContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas}
    content.vb: Public Sub New(BD As PacaContext, logger As ILogger(Of RepPessoas))
  overload: LivrEtec.Servidor.RepPessoas.#ctor*
  nameWithType.vb: RepPessoas.RepPessoas(PacaContext, ILogger(Of RepPessoas))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Servidor.RepPessoas.RepPessoas(LivrEtec.Servidor.PacaContext, Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepPessoas))
  name.vb: RepPessoas(PacaContext, ILogger(Of RepPessoas))
- uid: LivrEtec.Servidor.RepPessoas.ObterObter(System.Int32)
  commentId: M:LivrEtec.Servidor.RepPessoas.ObterObter(System.Int32)
  id: ObterObter(System.Int32)
  parent: LivrEtec.Servidor.RepPessoas
  langs:
  - csharp
  - vb
  name: ObterObter(Int32)
  nameWithType: RepPessoas.ObterObter(Int32)
  fullName: LivrEtec.Servidor.RepPessoas.ObterObter(System.Int32)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Servidor/Repositorios/RepPessoas.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: ObterObter
    path: ../LivrEtec.Servidor/Repositorios/RepPessoas.cs
    startLine: 15
  assemblies:
  - LivrEtec.Servidor
  namespace: LivrEtec.Servidor
  syntax:
    content: public async Task<Pessoa> ObterObter(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{LivrEtec.Pessoa}
    content.vb: Public Function ObterObter(id As Integer) As Task(Of Pessoa)
  overload: LivrEtec.Servidor.RepPessoas.ObterObter*
  implements:
  - LivrEtec.IRepPessoas.ObterObter(System.Int32)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: LivrEtec.Servidor
  commentId: N:LivrEtec.Servidor
  name: LivrEtec.Servidor
  nameWithType: LivrEtec.Servidor
  fullName: LivrEtec.Servidor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: LivrEtec.Servidor.Repositorio
  commentId: T:LivrEtec.Servidor.Repositorio
  parent: LivrEtec.Servidor
  name: Repositorio
  nameWithType: Repositorio
  fullName: LivrEtec.Servidor.Repositorio
- uid: LivrEtec.IRepPessoas
  commentId: T:LivrEtec.IRepPessoas
  parent: LivrEtec
  name: IRepPessoas
  nameWithType: IRepPessoas
  fullName: LivrEtec.IRepPessoas
- uid: LivrEtec.Servidor.Repositorio.BD
  commentId: F:LivrEtec.Servidor.Repositorio.BD
  parent: LivrEtec.Servidor.Repositorio
  name: BD
  nameWithType: Repositorio.BD
  fullName: LivrEtec.Servidor.Repositorio.BD
- uid: LivrEtec.Servidor.Repositorio.logger
  commentId: F:LivrEtec.Servidor.Repositorio.logger
  parent: LivrEtec.Servidor.Repositorio
  name: logger
  nameWithType: Repositorio.logger
  fullName: LivrEtec.Servidor.Repositorio.logger
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: LivrEtec.Servidor.RepPessoas.#ctor*
  commentId: Overload:LivrEtec.Servidor.RepPessoas.#ctor
  name: RepPessoas
  nameWithType: RepPessoas.RepPessoas
  fullName: LivrEtec.Servidor.RepPessoas.RepPessoas
- uid: LivrEtec.Servidor.PacaContext
  commentId: T:LivrEtec.Servidor.PacaContext
  parent: LivrEtec.Servidor
  name: PacaContext
  nameWithType: PacaContext
  fullName: LivrEtec.Servidor.PacaContext
- uid: Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas}
  commentId: T:Microsoft.Extensions.Logging.ILogger{LivrEtec.Servidor.RepPessoas}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<RepPessoas>
  nameWithType: ILogger<RepPessoas>
  fullName: Microsoft.Extensions.Logging.ILogger<LivrEtec.Servidor.RepPessoas>
  nameWithType.vb: ILogger(Of RepPessoas)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of LivrEtec.Servidor.RepPessoas)
  name.vb: ILogger(Of RepPessoas)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Servidor.RepPessoas
    name: RepPessoas
    nameWithType: RepPessoas
    fullName: LivrEtec.Servidor.RepPessoas
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Servidor.RepPessoas
    name: RepPessoas
    nameWithType: RepPessoas
    fullName: LivrEtec.Servidor.RepPessoas
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: LivrEtec.Servidor.RepPessoas.ObterObter*
  commentId: Overload:LivrEtec.Servidor.RepPessoas.ObterObter
  name: ObterObter
  nameWithType: RepPessoas.ObterObter
  fullName: LivrEtec.Servidor.RepPessoas.ObterObter
- uid: LivrEtec.IRepPessoas.ObterObter(System.Int32)
  commentId: M:LivrEtec.IRepPessoas.ObterObter(System.Int32)
  parent: LivrEtec.IRepPessoas
  isExternal: true
  name: ObterObter(Int32)
  nameWithType: IRepPessoas.ObterObter(Int32)
  fullName: LivrEtec.IRepPessoas.ObterObter(System.Int32)
  spec.csharp:
  - uid: LivrEtec.IRepPessoas.ObterObter(System.Int32)
    name: ObterObter
    nameWithType: IRepPessoas.ObterObter
    fullName: LivrEtec.IRepPessoas.ObterObter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: LivrEtec.IRepPessoas.ObterObter(System.Int32)
    name: ObterObter
    nameWithType: IRepPessoas.ObterObter
    fullName: LivrEtec.IRepPessoas.ObterObter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{LivrEtec.Pessoa}
  commentId: T:System.Threading.Tasks.Task{LivrEtec.Pessoa}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Pessoa>
  nameWithType: Task<Pessoa>
  fullName: System.Threading.Tasks.Task<LivrEtec.Pessoa>
  nameWithType.vb: Task(Of Pessoa)
  fullName.vb: System.Threading.Tasks.Task(Of LivrEtec.Pessoa)
  name.vb: Task(Of Pessoa)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LivrEtec.Pessoa
    name: Pessoa
    nameWithType: Pessoa
    fullName: LivrEtec.Pessoa
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LivrEtec.Pessoa
    name: Pessoa
    nameWithType: Pessoa
    fullName: LivrEtec.Pessoa
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
