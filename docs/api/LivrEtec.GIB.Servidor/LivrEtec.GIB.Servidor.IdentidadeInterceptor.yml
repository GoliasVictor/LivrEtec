### YamlMime:ManagedReference
items:
- uid: LivrEtec.GIB.Servidor.IdentidadeInterceptor
  commentId: T:LivrEtec.GIB.Servidor.IdentidadeInterceptor
  id: IdentidadeInterceptor
  parent: LivrEtec.GIB.Servidor
  children:
  - LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor(LivrEtec.IIdentidadeService)
  - LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  langs:
  - csharp
  - vb
  name: IdentidadeInterceptor
  nameWithType: IdentidadeInterceptor
  fullName: LivrEtec.GIB.Servidor.IdentidadeInterceptor
  type: Class
  source:
    remote:
      path: src/LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: IdentidadeInterceptor
    path: ../LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
    startLine: 5
  assemblies:
  - LivrEtec.GIB.Servidor
  namespace: LivrEtec.GIB.Servidor
  syntax:
    content: 'public class IdentidadeInterceptor : Interceptor'
    content.vb: >-
      Public Class IdentidadeInterceptor

          Inherits Interceptor
  inheritance:
  - System.Object
  - Grpc.Core.Interceptors.Interceptor
  inheritedMembers:
  - Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{{TRequest}},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2({TRequest},Grpc.Core.IServerStreamWriter{{TResponse}},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{{TRequest},{TResponse}})
  - Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{{TRequest}},Grpc.Core.IServerStreamWriter{{TResponse}},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{{TRequest},{TResponse}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor(LivrEtec.IIdentidadeService)
  commentId: M:LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor(LivrEtec.IIdentidadeService)
  id: '#ctor(LivrEtec.IIdentidadeService)'
  parent: LivrEtec.GIB.Servidor.IdentidadeInterceptor
  langs:
  - csharp
  - vb
  name: IdentidadeInterceptor(IIdentidadeService)
  nameWithType: IdentidadeInterceptor.IdentidadeInterceptor(IIdentidadeService)
  fullName: LivrEtec.GIB.Servidor.IdentidadeInterceptor.IdentidadeInterceptor(LivrEtec.IIdentidadeService)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
    startLine: 9
  assemblies:
  - LivrEtec.GIB.Servidor
  namespace: LivrEtec.GIB.Servidor
  syntax:
    content: public IdentidadeInterceptor(IIdentidadeService identidadeService)
    parameters:
    - id: identidadeService
      type: LivrEtec.IIdentidadeService
    content.vb: Public Sub New(identidadeService As IIdentidadeService)
  overload: LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  commentId: M:LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  id: UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  parent: LivrEtec.GIB.Servidor.IdentidadeInterceptor
  langs:
  - csharp
  - vb
  name: UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  nameWithType: IdentidadeInterceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  fullName: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod<TRequest, TResponse>)
  type: Method
  source:
    remote:
      path: src/LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: UnaryServerHandler
    path: ../LivrEtec.GIB.Servidor/Interceptors/IdentidadeInterceptor.cs
    startLine: 14
  assemblies:
  - LivrEtec.GIB.Servidor
  namespace: LivrEtec.GIB.Servidor
  syntax:
    content: >-
      public override async Task<TResponse> UnaryServerHandler<TRequest, TResponse>(TRequest request, ServerCallContext context, UnaryServerMethod<TRequest, TResponse> continuation)

          where TRequest : class where TResponse : class
    parameters:
    - id: request
      type: '{TRequest}'
    - id: context
      type: Grpc.Core.ServerCallContext
    - id: continuation
      type: Grpc.Core.UnaryServerMethod{{TRequest},{TResponse}}
    typeParameters:
    - id: TRequest
    - id: TResponse
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Overrides Function UnaryServerHandler(Of TRequest As Class, TResponse As Class)(request As TRequest, context As ServerCallContext, continuation As UnaryServerMethod(Of TRequest, TResponse)) As Task(Of TResponse)
  overridden: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2({TRequest},Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{{TRequest},{TResponse}})
  overload: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler*
  nameWithType.vb: IdentidadeInterceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod(Of TRequest, TResponse))
  name.vb: UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
references:
- uid: LivrEtec.GIB.Servidor
  commentId: N:LivrEtec.GIB.Servidor
  name: LivrEtec.GIB.Servidor
  nameWithType: LivrEtec.GIB.Servidor
  fullName: LivrEtec.GIB.Servidor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Grpc.Core.Interceptors.Interceptor
  commentId: T:Grpc.Core.Interceptors.Interceptor
  parent: Grpc.Core.Interceptors
  isExternal: true
  name: Interceptor
  nameWithType: Interceptor
  fullName: Grpc.Core.Interceptors.Interceptor
- uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
  name: BlockingUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.BlockingUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.BlockingUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  name.vb: BlockingUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
    name: BlockingUnaryCall<TRequest, TResponse>
    nameWithType: Interceptor.BlockingUnaryCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
    name: BlockingUnaryCall(Of TRequest, TResponse)
    nameWithType: Interceptor.BlockingUnaryCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
  name: AsyncUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
    name: AsyncUnaryCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncUnaryCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
    name: AsyncUnaryCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncUnaryCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2({TRequest},Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
  name: AsyncServerStreamingCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncServerStreamingCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
    name: AsyncServerStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncServerStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
    name: AsyncServerStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
  name: AsyncClientStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncClientStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall<TRequest, TResponse>(Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)(Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncClientStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
    name: AsyncClientStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncClientStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
    name: AsyncClientStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{{TRequest},{TResponse}},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
  name: AsyncDuplexStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>(Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)(Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
    name: AsyncDuplexStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
    name: AsyncDuplexStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{{TRequest}},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
  name: ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler<TRequest, TResponse>(Grpc.Core.IAsyncStreamReader<TRequest>, Grpc.Core.ServerCallContext, Grpc.Core.ClientStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), ServerCallContext, ClientStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)(Grpc.Core.IAsyncStreamReader(Of TRequest), Grpc.Core.ServerCallContext, Grpc.Core.ClientStreamingServerMethod(Of TRequest, TResponse))
  name.vb: ClientStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), ServerCallContext, ClientStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
    name: ClientStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.ClientStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ClientStreamingServerMethod`2
    name: ClientStreamingServerMethod
    nameWithType: ClientStreamingServerMethod
    fullName: Grpc.Core.ClientStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
    name: ClientStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ClientStreamingServerMethod`2
    name: ClientStreamingServerMethod
    nameWithType: ClientStreamingServerMethod
    fullName: Grpc.Core.ClientStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2({TRequest},Grpc.Core.IServerStreamWriter{{TResponse}},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
  name: ServerStreamingServerHandler<TRequest, TResponse>(TRequest, IServerStreamWriter<TResponse>, ServerCallContext, ServerStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.ServerStreamingServerHandler<TRequest, TResponse>(TRequest, IServerStreamWriter<TResponse>, ServerCallContext, ServerStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler<TRequest, TResponse>(TRequest, Grpc.Core.IServerStreamWriter<TResponse>, Grpc.Core.ServerCallContext, Grpc.Core.ServerStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, IServerStreamWriter(Of TResponse), ServerCallContext, ServerStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, Grpc.Core.IServerStreamWriter(Of TResponse), Grpc.Core.ServerCallContext, Grpc.Core.ServerStreamingServerMethod(Of TRequest, TResponse))
  name.vb: ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, IServerStreamWriter(Of TResponse), ServerCallContext, ServerStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
    name: ServerStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.ServerStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerStreamingServerMethod`2
    name: ServerStreamingServerMethod
    nameWithType: ServerStreamingServerMethod
    fullName: Grpc.Core.ServerStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
    name: ServerStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerStreamingServerMethod`2
    name: ServerStreamingServerMethod
    nameWithType: ServerStreamingServerMethod
    fullName: Grpc.Core.ServerStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{{TRequest}},Grpc.Core.IServerStreamWriter{{TResponse}},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
  name: DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, IServerStreamWriter<TResponse>, ServerCallContext, DuplexStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, IServerStreamWriter<TResponse>, ServerCallContext, DuplexStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>(Grpc.Core.IAsyncStreamReader<TRequest>, Grpc.Core.IServerStreamWriter<TResponse>, Grpc.Core.ServerCallContext, Grpc.Core.DuplexStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), IServerStreamWriter(Of TResponse), ServerCallContext, DuplexStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)(Grpc.Core.IAsyncStreamReader(Of TRequest), Grpc.Core.IServerStreamWriter(Of TResponse), Grpc.Core.ServerCallContext, Grpc.Core.DuplexStreamingServerMethod(Of TRequest, TResponse))
  name.vb: DuplexStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), IServerStreamWriter(Of TResponse), ServerCallContext, DuplexStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
    name: DuplexStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.DuplexStreamingServerMethod`2
    name: DuplexStreamingServerMethod
    nameWithType: DuplexStreamingServerMethod
    fullName: Grpc.Core.DuplexStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
    name: DuplexStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.DuplexStreamingServerMethod`2
    name: DuplexStreamingServerMethod
    nameWithType: DuplexStreamingServerMethod
    fullName: Grpc.Core.DuplexStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Interceptors
  commentId: N:Grpc.Core.Interceptors
  isExternal: true
  name: Grpc.Core.Interceptors
  nameWithType: Grpc.Core.Interceptors
  fullName: Grpc.Core.Interceptors
- uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
  isExternal: true
  name: BlockingUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.BlockingUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.BlockingUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  name.vb: BlockingUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
    name: BlockingUnaryCall<TRequest, TResponse>
    nameWithType: Interceptor.BlockingUnaryCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation{``0,``1})
    name: BlockingUnaryCall(Of TRequest, TResponse)
    nameWithType: Interceptor.BlockingUnaryCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
  isExternal: true
  name: AsyncUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncUnaryCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncUnaryCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
    name: AsyncUnaryCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncUnaryCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation{``0,``1})
    name: AsyncUnaryCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncUnaryCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
  isExternal: true
  name: AsyncServerStreamingCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncServerStreamingCall<TRequest, TResponse>(TRequest, ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall<TRequest, TResponse>(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncServerStreamingCall(Of TRequest, TResponse)(TRequest, ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
    name: AsyncServerStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncServerStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall``2(``0,Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation{``0,``1})
    name: AsyncServerStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
  isExternal: true
  name: AsyncClientStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncClientStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall<TRequest, TResponse>(Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)(Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncClientStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
    name: AsyncClientStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncClientStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation{``0,``1})
    name: AsyncClientStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
  isExternal: true
  name: AsyncDuplexStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  nameWithType: Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>(ClientInterceptorContext<TRequest, TResponse>, Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>(Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>, Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>)
  nameWithType.vb: Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)(Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse), Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  name.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)(ClientInterceptorContext(Of TRequest, TResponse), Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
    name: AsyncDuplexStreamingCall<TRequest, TResponse>
    nameWithType: Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall``2(Grpc.Core.Interceptors.ClientInterceptorContext{``0,``1},Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation{``0,``1})
    name: AsyncDuplexStreamingCall(Of TRequest, TResponse)
    nameWithType: Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCall(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
  isExternal: true
  name: ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.ClientStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, ServerCallContext, ClientStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler<TRequest, TResponse>(Grpc.Core.IAsyncStreamReader<TRequest>, Grpc.Core.ServerCallContext, Grpc.Core.ClientStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), ServerCallContext, ClientStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)(Grpc.Core.IAsyncStreamReader(Of TRequest), Grpc.Core.ServerCallContext, Grpc.Core.ClientStreamingServerMethod(Of TRequest, TResponse))
  name.vb: ClientStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), ServerCallContext, ClientStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
    name: ClientStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.ClientStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ClientStreamingServerMethod`2
    name: ClientStreamingServerMethod
    nameWithType: ClientStreamingServerMethod
    fullName: Grpc.Core.ClientStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})
    name: ClientStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.ClientStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ClientStreamingServerMethod`2
    name: ClientStreamingServerMethod
    nameWithType: ClientStreamingServerMethod
    fullName: Grpc.Core.ClientStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
  isExternal: true
  name: ServerStreamingServerHandler<TRequest, TResponse>(TRequest, IServerStreamWriter<TResponse>, ServerCallContext, ServerStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.ServerStreamingServerHandler<TRequest, TResponse>(TRequest, IServerStreamWriter<TResponse>, ServerCallContext, ServerStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler<TRequest, TResponse>(TRequest, Grpc.Core.IServerStreamWriter<TResponse>, Grpc.Core.ServerCallContext, Grpc.Core.ServerStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, IServerStreamWriter(Of TResponse), ServerCallContext, ServerStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, Grpc.Core.IServerStreamWriter(Of TResponse), Grpc.Core.ServerCallContext, Grpc.Core.ServerStreamingServerMethod(Of TRequest, TResponse))
  name.vb: ServerStreamingServerHandler(Of TRequest, TResponse)(TRequest, IServerStreamWriter(Of TResponse), ServerCallContext, ServerStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
    name: ServerStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.ServerStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerStreamingServerMethod`2
    name: ServerStreamingServerMethod
    nameWithType: ServerStreamingServerMethod
    fullName: Grpc.Core.ServerStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})
    name: ServerStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.ServerStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerStreamingServerMethod`2
    name: ServerStreamingServerMethod
    nameWithType: ServerStreamingServerMethod
    fullName: Grpc.Core.ServerStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
  isExternal: true
  name: DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, IServerStreamWriter<TResponse>, ServerCallContext, DuplexStreamingServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>(IAsyncStreamReader<TRequest>, IServerStreamWriter<TResponse>, ServerCallContext, DuplexStreamingServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>(Grpc.Core.IAsyncStreamReader<TRequest>, Grpc.Core.IServerStreamWriter<TResponse>, Grpc.Core.ServerCallContext, Grpc.Core.DuplexStreamingServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), IServerStreamWriter(Of TResponse), ServerCallContext, DuplexStreamingServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)(Grpc.Core.IAsyncStreamReader(Of TRequest), Grpc.Core.IServerStreamWriter(Of TResponse), Grpc.Core.ServerCallContext, Grpc.Core.DuplexStreamingServerMethod(Of TRequest, TResponse))
  name.vb: DuplexStreamingServerHandler(Of TRequest, TResponse)(IAsyncStreamReader(Of TRequest), IServerStreamWriter(Of TResponse), ServerCallContext, DuplexStreamingServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
    name: DuplexStreamingServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.DuplexStreamingServerMethod`2
    name: DuplexStreamingServerMethod
    nameWithType: DuplexStreamingServerMethod
    fullName: Grpc.Core.DuplexStreamingServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})
    name: DuplexStreamingServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.DuplexStreamingServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.DuplexStreamingServerMethod`2
    name: DuplexStreamingServerMethod
    nameWithType: DuplexStreamingServerMethod
    fullName: Grpc.Core.DuplexStreamingServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor*
  commentId: Overload:LivrEtec.GIB.Servidor.IdentidadeInterceptor.#ctor
  name: IdentidadeInterceptor
  nameWithType: IdentidadeInterceptor.IdentidadeInterceptor
  fullName: LivrEtec.GIB.Servidor.IdentidadeInterceptor.IdentidadeInterceptor
- uid: LivrEtec.IIdentidadeService
  commentId: T:LivrEtec.IIdentidadeService
  parent: LivrEtec
  name: IIdentidadeService
  nameWithType: IIdentidadeService
  fullName: LivrEtec.IIdentidadeService
- uid: LivrEtec
  commentId: N:LivrEtec
  name: LivrEtec
  nameWithType: LivrEtec
  fullName: LivrEtec
- uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2({TRequest},Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{{TRequest},{TResponse}})
  commentId: M:Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  parent: Grpc.Core.Interceptors.Interceptor
  definition: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  name: UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod(Of TRequest, TResponse))
  name.vb: UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
    name: UnaryServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.UnaryServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
    name: UnaryServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.UnaryServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler*
  commentId: Overload:LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler
  name: UnaryServerHandler
  nameWithType: IdentidadeInterceptor.UnaryServerHandler
  fullName: LivrEtec.GIB.Servidor.IdentidadeInterceptor.UnaryServerHandler
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: Grpc.Core.ServerCallContext
  commentId: T:Grpc.Core.ServerCallContext
  parent: Grpc.Core
  isExternal: true
  name: ServerCallContext
  nameWithType: ServerCallContext
  fullName: Grpc.Core.ServerCallContext
- uid: Grpc.Core.UnaryServerMethod{{TRequest},{TResponse}}
  commentId: T:Grpc.Core.UnaryServerMethod{``0,``1}
  parent: Grpc.Core
  definition: Grpc.Core.UnaryServerMethod`2
  name: UnaryServerMethod<TRequest, TResponse>
  nameWithType: UnaryServerMethod<TRequest, TResponse>
  fullName: Grpc.Core.UnaryServerMethod<TRequest, TResponse>
  nameWithType.vb: UnaryServerMethod(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.UnaryServerMethod(Of TRequest, TResponse)
  name.vb: UnaryServerMethod(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  commentId: M:Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
  isExternal: true
  name: UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  nameWithType: Interceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, ServerCallContext, UnaryServerMethod<TRequest, TResponse>)
  fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler<TRequest, TResponse>(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod<TRequest, TResponse>)
  nameWithType.vb: Interceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
  fullName.vb: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler(Of TRequest, TResponse)(TRequest, Grpc.Core.ServerCallContext, Grpc.Core.UnaryServerMethod(Of TRequest, TResponse))
  name.vb: UnaryServerHandler(Of TRequest, TResponse)(TRequest, ServerCallContext, UnaryServerMethod(Of TRequest, TResponse))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
    name: UnaryServerHandler<TRequest, TResponse>
    nameWithType: Interceptor.UnaryServerHandler<TRequest, TResponse>
    fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler<TRequest, TResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})
    name: UnaryServerHandler(Of TRequest, TResponse)
    nameWithType: Interceptor.UnaryServerHandler(Of TRequest, TResponse)
    fullName: Grpc.Core.Interceptors.Interceptor.UnaryServerHandler(Of TRequest, TResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.ServerCallContext
    name: ServerCallContext
    nameWithType: ServerCallContext
    fullName: Grpc.Core.ServerCallContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Grpc.Core.UnaryServerMethod`2
  commentId: T:Grpc.Core.UnaryServerMethod`2
  isExternal: true
  name: UnaryServerMethod<TRequest, TResponse>
  nameWithType: UnaryServerMethod<TRequest, TResponse>
  fullName: Grpc.Core.UnaryServerMethod<TRequest, TResponse>
  nameWithType.vb: UnaryServerMethod(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.UnaryServerMethod(Of TRequest, TResponse)
  name.vb: UnaryServerMethod(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.UnaryServerMethod`2
    name: UnaryServerMethod
    nameWithType: UnaryServerMethod
    fullName: Grpc.Core.UnaryServerMethod
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
