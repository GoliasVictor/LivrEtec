### YamlMime:ManagedReference
items:
- uid: LivrEtec.Testes.TestesLivrosService`1
  commentId: T:LivrEtec.Testes.TestesLivrosService`1
  id: TestesLivrosService`1
  parent: LivrEtec.Testes
  children:
  - LivrEtec.Testes.TestesLivrosService`1.#ctor(Xunit.Abstractions.ITestOutputHelper,LivrEtec.Testes.BDUtil)
  - LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - LivrEtec.Testes.TestesLivrosService`1.BDU
  - LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido(System.String,System.Int32[],System.Int32[])
  - LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync
  - LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync
  - LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync
  - LivrEtec.Testes.TestesLivrosService`1.livrosService
  - LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync
  - LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync
  - LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync(System.Int32,System.Int32,System.String)
  - LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync
  - LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync
  - LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync
  - LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync
  langs:
  - csharp
  - vb
  name: TestesLivrosService<T>
  nameWithType: TestesLivrosService<T>
  fullName: LivrEtec.Testes.TestesLivrosService<T>
  type: Class
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: TestesLivrosService
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 8
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Collection("UsaBancoDeDados")]

      public abstract class TestesLivrosService<T>

          where T : ILivrosService
    typeParameters:
    - id: T
    content.vb: >-
      <Collection("UsaBancoDeDados")>

      Public MustInherit Class TestesLivrosService(Of T As ILivrosService)
  inheritance:
  - System.Object
  derivedClasses:
  - LivrEtec.Testes.Local.TestesLivrosLocal
  - LivrEtec.Testes.Remoto.TestesLivrosServiceRPC
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Xunit.CollectionAttribute
    ctor: Xunit.CollectionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UsaBancoDeDados
  nameWithType.vb: TestesLivrosService(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T)
  name.vb: TestesLivrosService(Of T)
- uid: LivrEtec.Testes.TestesLivrosService`1.livrosService
  commentId: P:LivrEtec.Testes.TestesLivrosService`1.livrosService
  id: livrosService
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: livrosService
  nameWithType: TestesLivrosService<T>.livrosService
  fullName: LivrEtec.Testes.TestesLivrosService<T>.livrosService
  type: Property
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: livrosService
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 11
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: protected abstract T livrosService { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Protected MustOverride Property livrosService As T
  overload: LivrEtec.Testes.TestesLivrosService`1.livrosService*
  nameWithType.vb: TestesLivrosService(Of T).livrosService
  modifiers.csharp:
  - protected
  - abstract
  - get
  - set
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).livrosService
- uid: LivrEtec.Testes.TestesLivrosService`1.BDU
  commentId: F:LivrEtec.Testes.TestesLivrosService`1.BDU
  id: BDU
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: BDU
  nameWithType: TestesLivrosService<T>.BDU
  fullName: LivrEtec.Testes.TestesLivrosService<T>.BDU
  type: Field
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: BDU
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 12
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: protected readonly BDUtil BDU
    return:
      type: LivrEtec.Testes.BDUtil
    content.vb: Protected ReadOnly BDU As BDUtil
  nameWithType.vb: TestesLivrosService(Of T).BDU
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).BDU
- uid: LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: AssertEhIgual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: AssertEhIgual<K>(IEnumerable<K>, IEnumerable<K>)
  nameWithType: TestesLivrosService<T>.AssertEhIgual<K>(IEnumerable<K>, IEnumerable<K>)
  fullName: LivrEtec.Testes.TestesLivrosService<T>.AssertEhIgual<K>(System.Collections.Generic.IEnumerable<K>, System.Collections.Generic.IEnumerable<K>)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: AssertEhIgual
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 14
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public static void AssertEhIgual<K>(IEnumerable<K> A, IEnumerable<K> B)
    parameters:
    - id: A
      type: System.Collections.Generic.IEnumerable{{K}}
    - id: B
      type: System.Collections.Generic.IEnumerable{{K}}
    typeParameters:
    - id: K
    content.vb: Public Shared Sub AssertEhIgual(Of K)(A As IEnumerable(Of K), B As IEnumerable(Of K))
  overload: LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual*
  nameWithType.vb: TestesLivrosService(Of T).AssertEhIgual(Of K)(IEnumerable(Of K), IEnumerable(Of K))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).AssertEhIgual(Of K)(System.Collections.Generic.IEnumerable(Of K), System.Collections.Generic.IEnumerable(Of K))
  name.vb: AssertEhIgual(Of K)(IEnumerable(Of K), IEnumerable(Of K))
- uid: LivrEtec.Testes.TestesLivrosService`1.#ctor(Xunit.Abstractions.ITestOutputHelper,LivrEtec.Testes.BDUtil)
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.#ctor(Xunit.Abstractions.ITestOutputHelper,LivrEtec.Testes.BDUtil)
  id: '#ctor(Xunit.Abstractions.ITestOutputHelper,LivrEtec.Testes.BDUtil)'
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: TestesLivrosService(ITestOutputHelper, BDUtil)
  nameWithType: TestesLivrosService<T>.TestesLivrosService(ITestOutputHelper, BDUtil)
  fullName: LivrEtec.Testes.TestesLivrosService<T>.TestesLivrosService(Xunit.Abstractions.ITestOutputHelper, LivrEtec.Testes.BDUtil)
  type: Constructor
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: .ctor
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 25
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public TestesLivrosService(ITestOutputHelper output, BDUtil bdu)
    parameters:
    - id: output
      type: Xunit.Abstractions.ITestOutputHelper
    - id: bdu
      type: LivrEtec.Testes.BDUtil
    content.vb: Public Sub New(output As ITestOutputHelper, bdu As BDUtil)
  overload: LivrEtec.Testes.TestesLivrosService`1.#ctor*
  nameWithType.vb: TestesLivrosService(Of T).TestesLivrosService(ITestOutputHelper, BDUtil)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).TestesLivrosService(Xunit.Abstractions.ITestOutputHelper, LivrEtec.Testes.BDUtil)
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync
  id: Registrar_LivroValidoAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Registrar_LivroValidoAsync()
  nameWithType: TestesLivrosService<T>.Registrar_LivroValidoAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroValidoAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar_LivroValidoAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 74
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Registrar_LivroValidoAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Registrar_LivroValidoAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroValidoAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroValidoAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync
  id: Registrar_LivroExistenteAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Registrar_LivroExistenteAsync()
  nameWithType: TestesLivrosService<T>.Registrar_LivroExistenteAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroExistenteAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar_LivroExistenteAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 97
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Registrar_LivroExistenteAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Registrar_LivroExistenteAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroExistenteAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroExistenteAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync
  id: Registrar_idExistenteAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Registrar_idExistenteAsync()
  nameWithType: TestesLivrosService<T>.Registrar_idExistenteAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_idExistenteAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar_idExistenteAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 106
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Registrar_idExistenteAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Registrar_idExistenteAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Registrar_idExistenteAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_idExistenteAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync
  id: Registrar_LivroNuloAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Registrar_LivroNuloAsync()
  nameWithType: TestesLivrosService<T>.Registrar_LivroNuloAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroNuloAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar_LivroNuloAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 120
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Registrar_LivroNuloAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Registrar_LivroNuloAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroNuloAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroNuloAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync(System.Int32,System.Int32,System.String)
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync(System.Int32,System.Int32,System.String)
  id: Registrar_LivroInvalidoAsync(System.Int32,System.Int32,System.String)
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Registrar_LivroInvalidoAsync(Int32, Int32, String)
  nameWithType: TestesLivrosService<T>.Registrar_LivroInvalidoAsync(Int32, Int32, String)
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroInvalidoAsync(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Registrar_LivroInvalidoAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 130
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{-1, 1, "nome"})]

      [InlineData(new object[]{10, -1, "nome"})]

      [InlineData(new object[]{10, 0, "nome"})]

      [InlineData(new object[]{10, 1, ""})]

      [InlineData(new object[]{10, 1, null})]

      public async Task Registrar_LivroInvalidoAsync(int id, int Quantidade, string nome)
    parameters:
    - id: id
      type: System.Int32
    - id: Quantidade
      type: System.Int32
    - id: nome
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <InlineData(New Object() {-1, 1, "nome"})>

      <InlineData(New Object() {10, -1, "nome"})>

      <InlineData(New Object() {10, 0, "nome"})>

      <InlineData(New Object() {10, 1, ""})>

      <InlineData(New Object() {10, 1, Nothing})>

      Public Function Registrar_LivroInvalidoAsync(id As Integer, Quantidade As Integer, nome As String) As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroInvalidoAsync(Int32, Int32, String)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroInvalidoAsync(System.Int32, System.Int32, System.String)
- uid: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync
  id: Remover_LivroValidoAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Remover_LivroValidoAsync()
  nameWithType: TestesLivrosService<T>.Remover_LivroValidoAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Remover_LivroValidoAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Remover_LivroValidoAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 151
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Remover_LivroValidoAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Remover_LivroValidoAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Remover_LivroValidoAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Remover_LivroValidoAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync
  id: Remover_LivroInvalidoAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Remover_LivroInvalidoAsync()
  nameWithType: TestesLivrosService<T>.Remover_LivroInvalidoAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Remover_LivroInvalidoAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Remover_LivroInvalidoAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 160
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Remover_LivroInvalidoAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Remover_LivroInvalidoAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Remover_LivroInvalidoAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Remover_LivroInvalidoAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync
  id: Editar_TudoLivroValidoAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Editar_TudoLivroValidoAsync()
  nameWithType: TestesLivrosService<T>.Editar_TudoLivroValidoAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_TudoLivroValidoAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Editar_TudoLivroValidoAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 168
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Editar_TudoLivroValidoAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Editar_TudoLivroValidoAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Editar_TudoLivroValidoAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_TudoLivroValidoAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync
  id: Editar_LivroNuloAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Editar_LivroNuloAsync()
  nameWithType: TestesLivrosService<T>.Editar_LivroNuloAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_LivroNuloAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Editar_LivroNuloAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 189
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Editar_LivroNuloAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Editar_LivroNuloAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Editar_LivroNuloAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_LivroNuloAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync
  id: Editar_LivroTagNulaAsync
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Editar_LivroTagNulaAsync()
  nameWithType: TestesLivrosService<T>.Editar_LivroTagNulaAsync()
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_LivroTagNulaAsync()
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Editar_LivroTagNulaAsync
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 199
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Fact]

      public async Task Editar_LivroTagNulaAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function Editar_LivroTagNulaAsync As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Editar_LivroTagNulaAsync()
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_LivroTagNulaAsync()
- uid: LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido(System.String,System.Int32[],System.Int32[])
  commentId: M:LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido(System.String,System.Int32[],System.Int32[])
  id: Buscar_filtroValido(System.String,System.Int32[],System.Int32[])
  parent: LivrEtec.Testes.TestesLivrosService`1
  langs:
  - csharp
  - vb
  name: Buscar_filtroValido(String, Int32[], Int32[])
  nameWithType: TestesLivrosService<T>.Buscar_filtroValido(String, Int32[], Int32[])
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Buscar_filtroValido(System.String, System.Int32[], System.Int32[])
  type: Method
  source:
    remote:
      path: src/LivrEtec.Testes/TestesLivrosService.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Buscar_filtroValido
    path: ../LivrEtec.Testes/TestesLivrosService.cs
    startLine: 212
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"", new int[]{}, new int[]{1, 2, 3}})]

      [InlineData(new object[]{null, null, new int[]{1, 2, 3}})]

      [InlineData(new object[]{"", new int[]{2, 5}, new int[]{}})]

      [InlineData(new object[]{null, new int[]{2, 5}, new int[]{}})]

      [InlineData(new object[]{"Senhor", new int[]{}, new int[]{1}})]

      [InlineData(new object[]{"Senhor", new int[]{2}, new int[]{1}})]

      public async Task Buscar_filtroValido(string textoBusca, int[] arrTag, int[] idExperados)
    parameters:
    - id: textoBusca
      type: System.String
    - id: arrTag
      type: System.Int32[]
    - id: idExperados
      type: System.Int32[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"", New Integer() {}, New Integer() {1, 2, 3}})>

      <InlineData(New Object() {Nothing, Nothing, New Integer() {1, 2, 3}})>

      <InlineData(New Object() {"", New Integer() {2, 5}, New Integer() {}})>

      <InlineData(New Object() {Nothing, New Integer() {2, 5}, New Integer() {}})>

      <InlineData(New Object() {"Senhor", New Integer() {}, New Integer() {1}})>

      <InlineData(New Object() {"Senhor", New Integer() {2}, New Integer() {1}})>

      Public Function Buscar_filtroValido(textoBusca As String, arrTag As Integer(), idExperados As Integer()) As Task
  overload: LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: TestesLivrosService(Of T).Buscar_filtroValido(String, Int32(), Int32())
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Buscar_filtroValido(System.String, System.Int32(), System.Int32())
  name.vb: Buscar_filtroValido(String, Int32(), Int32())
references:
- uid: LivrEtec.Testes
  commentId: N:LivrEtec.Testes
  name: LivrEtec.Testes
  nameWithType: LivrEtec.Testes
  fullName: LivrEtec.Testes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LivrEtec.Testes.TestesLivrosService`1.livrosService*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.livrosService
  name: livrosService
  nameWithType: TestesLivrosService<T>.livrosService
  fullName: LivrEtec.Testes.TestesLivrosService<T>.livrosService
  nameWithType.vb: TestesLivrosService(Of T).livrosService
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).livrosService
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LivrEtec.Testes.BDUtil
  commentId: T:LivrEtec.Testes.BDUtil
  parent: LivrEtec.Testes
  name: BDUtil
  nameWithType: BDUtil
  fullName: LivrEtec.Testes.BDUtil
- uid: LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.AssertEhIgual
  name: AssertEhIgual
  nameWithType: TestesLivrosService<T>.AssertEhIgual
  fullName: LivrEtec.Testes.TestesLivrosService<T>.AssertEhIgual
  nameWithType.vb: TestesLivrosService(Of T).AssertEhIgual
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).AssertEhIgual
- uid: System.Collections.Generic.IEnumerable{{K}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<K>
  nameWithType: IEnumerable<K>
  fullName: System.Collections.Generic.IEnumerable<K>
  nameWithType.vb: IEnumerable(Of K)
  fullName.vb: System.Collections.Generic.IEnumerable(Of K)
  name.vb: IEnumerable(Of K)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LivrEtec.Testes.TestesLivrosService`1.#ctor*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.#ctor
  name: TestesLivrosService
  nameWithType: TestesLivrosService<T>.TestesLivrosService
  fullName: LivrEtec.Testes.TestesLivrosService<T>.TestesLivrosService
  nameWithType.vb: TestesLivrosService(Of T).TestesLivrosService
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).TestesLivrosService
- uid: Xunit.Abstractions.ITestOutputHelper
  commentId: T:Xunit.Abstractions.ITestOutputHelper
  parent: Xunit.Abstractions
  isExternal: true
  name: ITestOutputHelper
  nameWithType: ITestOutputHelper
  fullName: Xunit.Abstractions.ITestOutputHelper
- uid: Xunit.Abstractions
  commentId: N:Xunit.Abstractions
  isExternal: true
  name: Xunit.Abstractions
  nameWithType: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroValidoAsync
  name: Registrar_LivroValidoAsync
  nameWithType: TestesLivrosService<T>.Registrar_LivroValidoAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroValidoAsync
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroValidoAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroValidoAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroExistenteAsync
  name: Registrar_LivroExistenteAsync
  nameWithType: TestesLivrosService<T>.Registrar_LivroExistenteAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroExistenteAsync
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroExistenteAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroExistenteAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Registrar_idExistenteAsync
  name: Registrar_idExistenteAsync
  nameWithType: TestesLivrosService<T>.Registrar_idExistenteAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_idExistenteAsync
  nameWithType.vb: TestesLivrosService(Of T).Registrar_idExistenteAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_idExistenteAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroNuloAsync
  name: Registrar_LivroNuloAsync
  nameWithType: TestesLivrosService<T>.Registrar_LivroNuloAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroNuloAsync
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroNuloAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroNuloAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Registrar_LivroInvalidoAsync
  name: Registrar_LivroInvalidoAsync
  nameWithType: TestesLivrosService<T>.Registrar_LivroInvalidoAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Registrar_LivroInvalidoAsync
  nameWithType.vb: TestesLivrosService(Of T).Registrar_LivroInvalidoAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Registrar_LivroInvalidoAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Remover_LivroValidoAsync
  name: Remover_LivroValidoAsync
  nameWithType: TestesLivrosService<T>.Remover_LivroValidoAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Remover_LivroValidoAsync
  nameWithType.vb: TestesLivrosService(Of T).Remover_LivroValidoAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Remover_LivroValidoAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Remover_LivroInvalidoAsync
  name: Remover_LivroInvalidoAsync
  nameWithType: TestesLivrosService<T>.Remover_LivroInvalidoAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Remover_LivroInvalidoAsync
  nameWithType.vb: TestesLivrosService(Of T).Remover_LivroInvalidoAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Remover_LivroInvalidoAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Editar_TudoLivroValidoAsync
  name: Editar_TudoLivroValidoAsync
  nameWithType: TestesLivrosService<T>.Editar_TudoLivroValidoAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_TudoLivroValidoAsync
  nameWithType.vb: TestesLivrosService(Of T).Editar_TudoLivroValidoAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_TudoLivroValidoAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Editar_LivroNuloAsync
  name: Editar_LivroNuloAsync
  nameWithType: TestesLivrosService<T>.Editar_LivroNuloAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_LivroNuloAsync
  nameWithType.vb: TestesLivrosService(Of T).Editar_LivroNuloAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_LivroNuloAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Editar_LivroTagNulaAsync
  name: Editar_LivroTagNulaAsync
  nameWithType: TestesLivrosService<T>.Editar_LivroTagNulaAsync
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Editar_LivroTagNulaAsync
  nameWithType.vb: TestesLivrosService(Of T).Editar_LivroTagNulaAsync
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Editar_LivroTagNulaAsync
- uid: LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido*
  commentId: Overload:LivrEtec.Testes.TestesLivrosService`1.Buscar_filtroValido
  name: Buscar_filtroValido
  nameWithType: TestesLivrosService<T>.Buscar_filtroValido
  fullName: LivrEtec.Testes.TestesLivrosService<T>.Buscar_filtroValido
  nameWithType.vb: TestesLivrosService(Of T).Buscar_filtroValido
  fullName.vb: LivrEtec.Testes.TestesLivrosService(Of T).Buscar_filtroValido
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
