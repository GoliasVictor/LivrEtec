### YamlMime:ManagedReference
items:
- uid: LivrEtec.Testes.Configuracao
  commentId: T:LivrEtec.Testes.Configuracao
  id: Configuracao
  parent: LivrEtec.Testes
  children:
  - LivrEtec.Testes.Configuracao.AuthKey
  - LivrEtec.Testes.Configuracao.StrConexaoMySQL
  - LivrEtec.Testes.Configuracao.UrlGIBAPI
  langs:
  - csharp
  - vb
  name: Configuracao
  nameWithType: Configuracao
  fullName: LivrEtec.Testes.Configuracao
  type: Class
  source:
    remote:
      path: src/LivrEtec.Testes/Configuracao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: Configuracao
    path: ../LivrEtec.Testes/Configuracao.cs
    startLine: 5
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public static class Configuracao
    content.vb: Public Module Configuracao
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: LivrEtec.Testes.Configuracao.UrlGIBAPI
  commentId: F:LivrEtec.Testes.Configuracao.UrlGIBAPI
  id: UrlGIBAPI
  parent: LivrEtec.Testes.Configuracao
  langs:
  - csharp
  - vb
  name: UrlGIBAPI
  nameWithType: Configuracao.UrlGIBAPI
  fullName: LivrEtec.Testes.Configuracao.UrlGIBAPI
  type: Field
  source:
    remote:
      path: src/LivrEtec.Testes/Configuracao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: UrlGIBAPI
    path: ../LivrEtec.Testes/Configuracao.cs
    startLine: 27
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public static readonly string UrlGIBAPI
    return:
      type: System.String
    content.vb: Public Shared ReadOnly UrlGIBAPI As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: LivrEtec.Testes.Configuracao.StrConexaoMySQL
  commentId: F:LivrEtec.Testes.Configuracao.StrConexaoMySQL
  id: StrConexaoMySQL
  parent: LivrEtec.Testes.Configuracao
  langs:
  - csharp
  - vb
  name: StrConexaoMySQL
  nameWithType: Configuracao.StrConexaoMySQL
  fullName: LivrEtec.Testes.Configuracao.StrConexaoMySQL
  type: Field
  source:
    remote:
      path: src/LivrEtec.Testes/Configuracao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: StrConexaoMySQL
    path: ../LivrEtec.Testes/Configuracao.cs
    startLine: 28
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public static readonly string StrConexaoMySQL
    return:
      type: System.String
    content.vb: Public Shared ReadOnly StrConexaoMySQL As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: LivrEtec.Testes.Configuracao.AuthKey
  commentId: F:LivrEtec.Testes.Configuracao.AuthKey
  id: AuthKey
  parent: LivrEtec.Testes.Configuracao
  langs:
  - csharp
  - vb
  name: AuthKey
  nameWithType: Configuracao.AuthKey
  fullName: LivrEtec.Testes.Configuracao.AuthKey
  type: Field
  source:
    remote:
      path: src/LivrEtec.Testes/Configuracao.cs
      branch: documentando
      repo: https://github.com/GoliasVictor/LivrEtec.git
    id: AuthKey
    path: ../LivrEtec.Testes/Configuracao.cs
    startLine: 29
  assemblies:
  - LivrEtec.Testes
  namespace: LivrEtec.Testes
  syntax:
    content: public static readonly byte[] AuthKey
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly AuthKey As Byte()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: LivrEtec.Testes
  commentId: N:LivrEtec.Testes
  name: LivrEtec.Testes
  nameWithType: LivrEtec.Testes
  fullName: LivrEtec.Testes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
